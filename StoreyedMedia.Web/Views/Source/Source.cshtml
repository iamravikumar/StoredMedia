@model StoreyedMedia.Model.Source 

@{
    ViewBag.Title = "Sources";
}

<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" type="text/css">
    <link href="~/Content/grid-0.4.3.min.css" rel="stylesheet" type="text/css">

    <script src="~/Scripts/jquery-2.1.3.min.js" type="text/javascript"></script>
    <script src="~/Scripts/grid-0.4.3.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>

    @*Auto complete cdns*@

    <link href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet" />
    <script src='https://cdn.rawgit.com/pguso/jquery-plugin-circliful/master/js/jquery.circliful.min.js'></script>
    <script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>

    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
    <script src="http://malsup.github.com/jquery.form.js"></script>
    <script type="text/javascript">



        var grid;
        function Add() {
            $("#Type").val("add");
            $("#SourceId").val("");
            $("#SourceId").removeAttr("readOnly");
            $("#SourceName").val("");
            $("#DarkLogo").val("");
            $("#LightLogo").val("");
            $("#DarkLogoFile").val("");
            $("#LightLogoFile").val("");

            $("#statusContainer").css("display", "none");
            $("#sourceNameLabel").css("display", "none");
            $("#sourceNameContainer").css("display", "block");

            $("#DarkLogoFile").css("display", "block");
            $("#darkImgBox").css("display", "none"); 

            $("#LightLogoFile").css("display", "block");
            $("#lightImgBox").css("display", "none");
            $("#searchResults").css("display", "none");
            

            $("#sourceModal").modal("show");
        }

        function Edit(e) {
            $("#Type").val("update");
            $("#SourceName").val(e.data.record.SourceName);
            $("#SourceId").val(e.data.record.SourceId);
            $("#SourceId").attr("readOnly", "readOnly");
            //$("#DarkLogo").val(e.data.record.DarkLogo);
            //$("#LightLogo").val(e.data.record.LightLogo);
            $("#Status").val(e.data.record.Status); 
            if (e.data.record.DarkLogo == null || e.data.record.DarkLogo == '')
            {
                $("#DarkLogoFile").css("display", "block");
                $("#darkImgBox").css("display", "none"); 
            }
            else {

                $("#DarkLogoFile").css("display", "none");
                $("#darkImgBox").css("display", "block");
                $("#darkImgBox").children("img").attr("src", e.data.record.DarkLogo);
            }

            if (e.data.record.LightLogo == null || e.data.record.LightLogo == '') {
                $("#LightLogoFile").css("display", "block");
                $("#lightImgBox").css("display", "none");
            }
            else {

                $("#LightLogoFile").css("display", "none");
                $("#lightImgBox").css("display", "block");
                $("#lightImgBox").children("img").attr("src", e.data.record.LightLogo);
            }
             
           
            
            $("#statusContainer").css("display", "block");
            $("#sourceNameLabel").css("display", "block");
            $("#SourceNameLbl").text(e.data.record.SourceName);
            $("#sourceNameContainer").css("display", "none");
           
            
            
            $("#sourceModal").modal("show");

            
        }




        function Archive(e) { 
            if (e.data.record.Status == 0) { return false; };
            $.ajax({ url: "Source/ArchiveASource", type: "POST", data: { id: e.data.record.SourceId } })
                .done(function (result) {
                    var data = JSON.parse(result.Content);
                    alert(data.message);

                    grid.reload();
                })
                .fail(function () {
                    alert("Unable to remove.");
                });
        }



        $(document).ready(function () {
           

            $("#replaceLightLogoFile").on('click', function () {
                $("#LightLogoFile").click();

                $("#LightLogoFile").css("display", "block");
                $("#lightImgBox").children("img").css("display", "none");
            });
            $("#replaceDarkLogoFile").on('click', function () {
                $("#DarkLogoFile").click();
            });

            $("#removeLightLogoFile").on('click', function () {
                $("#LightLogoFile").val("");
            });
            $("#removeDarkLogoFile").on('click', function () {
                $("#DarkLogoFile").val("");
            });

            $("#LightLogoFile").on('change', function () {
                $("#LightLogo").val(this.files[0].name);


            });
            $("#DarkLogoFile").on('change', function () {
                $("#DarkLogo").val(this.files[0].name);
            });

            var status = $('#status');

            //function SubmitSource()
            //{
            //    alert(11);
            //    var formData = new FormData();

            //    var inputFiles = $('#DarkLogoFile');
            //    for (var i = 0; i < inputFiles[0].files.length; i++) {
            //        formData.append("files[" + i + "]", inputFiles[0].files[i]);
            //    }
            //    var lightLogoFileFiles = $('#LightLogoFile')

            //    for (var i = 0; i < lightLogoFileFiles[0].files.length; i++) {
            //        formData.append("files[" + i + "]", lightLogoFileFiles[0].files[i]);
            //    }

            //    $.ajax({
            //        url: window.baseUrl + "Source/Save",
            //        type: "POST",
            //        contentType: "application/json, charset=utf-8",
            //        dataType: "json",
            //        data: formData,
            //        processData: false,
            //        contentType: false,
            //    });

            //}

            $('form').ajaxForm({ 
                beforeSend: function () {
                     

                    //alert($("#DarkLogoFile").val());
                    // $("#LightLogoFile").text(" ");
                    status.empty();
                    //var percentVal = '0%';
                    //bar.width(percentVal)
                    //percent.html(percentVal);
                } ,
                //uploadProgress: function (event, position, total, percentComplete) {
                //    var percentVal = percentComplete + '%';
                //    bar.width(percentVal)
                //    percent.html(percentVal);
                //},
                //success: function () {
                //    var percentVal = '100%';
                //    bar.width(percentVal)
                //    percent.html(percentVal);
                //},
                complete: function (data) {
                  
                    alert(data.responseText);
                    $("#sourceModal").modal("hide");
                }
            });

            grid = $("#grid").grid({
                dataKey: "SourceId",
                uiLibrary: "bootstrap",
                columns: [
                    { field: "SourceId", width: 100, sortable: false, hidden: true },
                    { field: "SourceName", sortable: true },
                    { field: "ItemsPublished", sortable: true, type: 'integer'},
                    { field: "Status", sortable: true, hidden: true },
                    { field: "StatusText", sortable: true },
                    { title: "", field: "Edit", width: 34, type: "icon", icon: "glyphicon-pencil", tooltip: "Edit", events: { "click": Edit } },
                    { title: "", field: "Archive", width: 34, type: "icon", icon: "glyphicon-remove", tooltip: "Archive", events: { "click": Archive } }
                ],
                pager: { enable: true, limit: 10, sizes: [10, 50, 100] }
            });
            $("#btnAddSource").on("click", Add);


        });


        setTimeout(function () {

            $('#display-success').fadeOut().text('');
            $('#display-error').fadeOut().text('');
        }, 10000);
        $('#display-success').fadeIn().delay(5000).fadeOut();
        $('#display-error').fadeIn().delay(5000).fadeOut();


    </script>

</head>
@{ Html.EnableClientValidation(); }
<div>
    @*@if (!ViewData.ModelState.IsValid)
    {
        <div class="row">
            <div class="col-lg-pull-10">
                <label class="label-danger" id="display-error">
                    @Html.ValidationMessage("Error")
                </label>
            </div>
        </div>

    }
    else if (TempData["SuccessMessage"] != null)
    {
        <label class="label-success" id="display-success">@TempData["SuccessMessage"]</label>
    }
    @if (TempData["deleteMessage"] != null)
    {
        <div style="color:green" id="display-delete">@TempData["deleteMessage"]</div>
    }

    else if (TempData["message"] != null)
    {
        <div style="color:green" id="display-msg">@TempData["message"]</div>
    }

    @if (TempData["multipleAction"] != null)
    {
        <div style="color:green" id="display-delete">@TempData["multipleAction"]</div>
    }*@


    <div class="container fill">
         

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="row">
                <div class="col-lg-pull-10">
                    <label class="label-danger" id="display-error">
                        @Html.ValidationMessage("Error")
                    </label>
                </div>
            </div>

        }
        else if (TempData["SuccessMessage"] != null)
        {
            <label class="label-success" id="display-success">@TempData["SuccessMessage"]</label>
        }

        <h2>Sources</h2>
        @*<br />*@
        <div class="row">
            <div class="pull-right">
                <button type="button" id="btnAddSource" class="btn btn-default pull-right">Add New Source</button>
            </div>
           

             

        </div>
        <br />
        <table id="grid" data-source="@Url.Action("GetSource")"></table>
    </div>
    @using (Html.BeginForm("Save", "Source", FormMethod.Post))
    {
        @Html.ValidationSummary(true)

            <!-- Modal -->
        <div class="modal fade" id="sourceModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Source</h4>
                    </div>
                    <div class="modal-body">
                        <form>
                            @Html.HiddenFor(Model => Model.SourceId)  
                            @Html.HiddenFor(Model => Model.DarkLogo)

                            @Html.HiddenFor(Model => Model.LightLogo) 

                            <div id="sourceNameContainer">
                                <label for="SourceName">Name</label>
                                @Html.TextBoxFor(Model => Model.SourceName, new { @class = "form-control", id = "SourceName" })
                                @Html.ValidationMessageFor(Model => Model.SourceName)
                            </div> 
                            <div id="sourceNameLabel"> 
                                @Html.LabelFor(Model => Model.SourceName, new {   id = "SourceNameLbl" })
                            </div>
                            <br />
                            
                            <div id="statusContainer">
                                <label for="Status">Status:</label>
                                @{var listItems = new List<SelectListItem>
                             {
                            new SelectListItem { Text = "Active", Value="1" },
                            new SelectListItem { Text = "Archive", Value="0" }
                             };
                                }

                                @Html.DropDownListFor(Model => Model.Status, new SelectList(listItems, "Value", "Text") , new { @class = "form-control", id = "Status" })
                              
                            </div>
                           @Html.AntiForgeryToken()
                            <div class="form-group">
                                <label for="DarkLogo">DarkLogo</label> 
                                <input type="file" name="darkLogoFile" id = "DarkLogoFile"  ><br> 
                                <div id="darkImgBox">  <img  width="100" height="100" alt="Image" /> 
                                    <input type="button" name="replace" id="replaceDarkLogoFile" value="Replace"><br>
                                    <input type="button" name="remove" id="removeDarkLogoFile" value="Remove"><br> 
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="LightLogo">LightLogo</label>
                                <input type="file" name="lightLogoFile" id="LightLogoFile"  ><br> 
                                <div id="lightImgBox">
                                    <img width="100" height="100" alt="Image" /><br>
                                    <input type="button" name="replace" id="replaceLightLogoFile" value="Replace"><br> 
                                    <input type="button" name="remove" id="removeLightLogoFile" value="Remove"><br> 
                                </div>  
                            </div>

                            <div class="form-group">
                                <a id="searchResults">Search Results</a>
                                 
                            </div>


                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button   id="btnSave" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>



                                    }
</div>