@model StoreyedMedia.Model.Categories
@{
    ViewBag.Title = "Categories";
}
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" type="text/css">
    <link href="~/Content/grid-0.4.3.min.css" rel="stylesheet" type="text/css">
    <script src="~/Scripts/jquery-2.1.3.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>


    <link href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet" />
    <script src='https://cdn.rawgit.com/pguso/jquery-plugin-circliful/master/js/jquery.circliful.min.js'></script>
    <script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/grid-0.4.3.js" type="text/javascript"></script>
    <script src="http://malsup.github.com/jquery.form.js"></script>
    <script type="text/javascript">
        function Add() {
            $("#spanCategoryHeading").html("Add Category");
            $("#IconFile").attr("required", "true");
            $("#CategoryId").val("");
            $("#CategoryId").removeAttr("readOnly");
            $("#Category").val("");
            $("#IconUrl").val("");
            $("#IconFile").css("display", "block");
            $("#iconImgBox").children("img").css("display", "none");
            $("#replaceIconFile").css("display", "none");
            $("#removeIconFile").css("display", "none");
            $("#addCategoriesModel").modal("show");
        }

        function Edit(e) {
            $("#spanCategoryHeading").html("Edit Category");
            $("#CategoryId").val(e.data.record.CategoryId);
            $("#IconFile").removeAttr("required");
            $("#CategoryId").attr("readOnly", "readOnly");
            $("#Category").val(e.data.record.Category);
            $("#IconUrl").val(e.data.record.IconUrl);
            if (e.data.record.IconUrl == null || e.data.record.IconUrl == '') {
                $("#IconFile").css("display", "block");
                $("#iconImgBox").children("img").css("display", "none");
                $("#replaceIconFile").css("display", "none");
                $("#removeIconFile").css("display", "none");
            }
            else {
                $("#IconFile").css("display", "none");
                $("#iconImgBox").children("img").css("display", "block");
                $("#iconImgBox").children("img").attr("src", e.data.record.IconUrl);
                $("#replaceIconFile").css("display", "block");
                $("#removeIconFile").css("display", "block");
            }
            $('#addCategoriesModel').modal({ backdrop: 'static', keyboard: false }, 'show');
        }

        function View(e) {
            var CategoryId = e.data.record.CategoryId;
            window.location = '/Tags/GetTags/?categoryId=' + CategoryId;
        }


        function Delete(e) {
            if (typeof (e) == "undefined") {
                var CategoryId = $("#CategoryId").val();
                var Category = $("#Category").val();
                $("#CategoryName").val(Category);

            }
            else {
                var CategoryId = e.data.record.CategoryId;
                $("#CategoryName").text(e.data.record.Category);
            }
            $('#categoryDeleteModal').data('CategoryId', CategoryId).modal('show');
        }

        function DeleteCategory() {
            var CategoryId = $('#categoryDeleteModal').data('CategoryId');
            $.post('@Url.Action("Remove", "Categories")', { 'CategoryId': CategoryId },
                function (data) {
                    $('#categoryDeleteModal').modal('hide');
                });
            location.reload();
        };

        function SaveClick(e) {
            if ($("#Category").val() != "" && $("#IconUrl").val() != "") {
                location.reload();
                $("#display-msg").val(@TempData["categoryMessage"]);
            }
        }

        $(document).ready(function () {
            $("#IconFile").on('change', function () {
                $("#IconUrl").val(this.files[0].name);
            });

            $("#replaceIconFile").on('click', function () {
                $("#IconFile").click();

                $("#IconFile").css("display", "block");
                $("#iconImgBox").children("img").css("display", "none");
                $("#removeIconFile").css("display", "none");
                $("#replaceIconFile").css("display", "none");
            });

            $("#removeIconFile").on('click', function () {
                $("#IconFile").val("");
                $("#iconImgBox").children("img").css("display", "none");
                $("#IconFile").css("display", "block");
                $("#replaceIconFile").css("display", "none");
                $("#removeIconFile").css("display", "none");
            });


            $('form').ajaxForm({
                beforeSend: function () {
                    //status.empty();
                    //var percentVal = '0%';
                    //bar.width(percentVal)
                    //percent.html(percentVal);
                },
                //uploadProgress: function (event, position, total, percentComplete) {
                //    var percentVal = percentComplete + '%';
                //    bar.width(percentVal)
                //    percent.html(percentVal);
                //},
                //success: function () {
                //    var percentVal = '100%';
                //    bar.width(percentVal)
                //    percent.html(percentVal);
                //},
                complete: function (data) {
                    $("#addCategoriesModel").modal("hide");
                }
            });


            $("#btnDeleteCategory").on("click", DeleteCategory);

            var categoryGrid;
            function Search() {
                categoryGrid.reload({ searchString: $("#search").val(), starred: $("#selFilter").val() });
            };

            categoryGrid = $("#categoriesGrid").grid({
                dataKey: "CategoryId",
                uiLibrary: "bootstrap",
                columns: [
                    { text: '', datafield: 'CategoryId', type: 'checkbox', width: 40, cssClass: 'chkCategories' },
                    { field: "CategoryId", width: 100, sortable: false, hidden: true },
                    { field: "IconUrl", width: 100, sortable: false, hidden: true },
                    { field: "Category", title: "Category Name", width: 400},
                    { title: "Tags", field: "View", width: 42, type: "icon", icon: "glyphicon glyphicon-open", tooltip: "View", events: { "click": View } },
                    { title: "", field: "Edit", width: 34, type: "icon", icon: "glyphicon-pencil", tooltip: "Edit", events: { "click": Edit } },
                    { title: "", field: "Delete", width: 34, type: "icon", icon: "glyphicon-remove", tooltip: "Delete", events: { "click": Delete } }
                ],
                complete: function (jsondata, stat) {
                    if (stat == "success") {
                        location.reload();
                    }
                },
                pager: { enable: true, limit: 10, sizes: [10, 50, 100] },

            });
            $("#btnAddCategory").on("click", Add);
        })

        setTimeout(function () {
            $('#display-msg').fadeOut().text('');
            $('#display-delete').fadeOut().text('');
        }, 3000);
    </script>

</head>
@{ Html.EnableClientValidation(); }
<body>
    <div class="container">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="row">
                <div class="col-lg-pull-10">
                    <label class="label-danger" id="display-error">
                        @Html.ValidationMessage("Error")
                    </label>
                </div>
            </div>

        }
        @if (TempData["deleteMessage"] != null)
        {
            <label style="color:green" id="display-delete">@TempData["deleteMessage"]</label>
        }
        else if (TempData["categoryMessage"] != null)
        {
            <label style="color:green" id="display-msg">@TempData["categoryMessage"]</label>
        }
        <h2>Categories</h2><div class="pull-right">
            <button type="button" id="btnAddCategory" class="btn btn-default pull-right">Add Category</button>
        </div>
        <br />
        <div class="row">
            <table id="categoriesGrid" data-source="@Url.Action("GetCategories")"></table>
        </div>
    </div>
    @using (Html.BeginForm("Save", "Categories", FormMethod.Post))
    {
        @Html.ValidationSummary(true)
           <!-- Modal -->
        <div class="modal fade" id="addCategoriesModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="height: 150px;position:fixed">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="float:left">
                            <span style="float:left" id="spanCategoryHeading"></span>
                        </label><label style="float:right">
                            <button style='float:right' type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        </label>
                    </div>
                    <div class="modal-body">
                        <form>
                            @Html.HiddenFor(Model => Model.IsNew)
                            @Html.HiddenFor(Model => Model.CreatedOnDateTime)
                            @Html.HiddenFor(Model => Model.IconUrl)
                            <div hidden>
                                <label for="CategoryId">CategoryId</label>
                                @Html.TextBoxFor(Model => Model.CategoryId, new { @class = "form-control", id = "CategoryId" })
                                @Html.ValidationMessageFor(Model => Model.CategoryId)
                            </div>
                            <div class="form-group">
                                <label for="Category">Name</label>
                                @Html.TextBoxFor(Model => Model.Category, new { @class = "form-control", id = "Category" })
                                @Html.ValidationMessageFor(Model => Model.Category)
                            </div>
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <label for="IconUrl">Icon</label>
                                <input type="file" name="files" id="IconFile"><br>
                                <div id="iconImgBox">
                                    <img width="200" height="200" alt="Image" />
                                    <input type="button" name="replace" id="replaceIconFile" value="Replace"><br>
                                    <input type="button" name="remove" id="removeIconFile" value="Remove"><br>
                                </div>
                                @Html.ValidationMessageFor(Model => Model.IconUrl)
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnCancel" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                        <button type="submit" id="btnSave" class="btn btn-default" onclick="SaveClick()">Save</button>
                    </div>
                </div>
            </div>
        </div>

        @*Delete Tag popup*@
        <div class="modal fade" id="categoryDeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document" style="height: 150px;width:380px;position:fixed">
                <div class="modal-content">
                    <div class="modal-header jumbotron">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel4" style='font-weight: bold;'>Delete Category</h4>
                    </div>
                    <div class="modal-body">
                        <p class="success-message" style="color: gray;font-weight:bold;">Are you sure you want to delete the selected category? </p>
                        <br />
                        <label id="CategoryName" style="font-size:larger;"></label>
                        <br />
                        <br />
                        <p class="success-message" style="color: red;">Warning: This action will also delete all tags associated with this category</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default" style="border: none;font-weight:bold;text-transform:uppercase;color:gray" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" style="border: none; font-weight:bold;text-transform:uppercase;color:skyblue" id="btnDeleteCategory">Delete</button>
                    </div>
                </div>
            </div>
        </div>

    }
</body>