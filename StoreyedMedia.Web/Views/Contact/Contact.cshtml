@model StoreyedMedia.Model.Contact
@{
    ViewBag.Title = "Contacts";
}

<h2>Index</h2>

<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" type="text/css">
    <link href="~/Content/grid-0.4.3.min.css" rel="stylesheet" type="text/css">
    <script src="~/Scripts/jquery-2.1.3.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>


    <link href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet" />
    <script src='https://cdn.rawgit.com/pguso/jquery-plugin-circliful/master/js/jquery.circliful.min.js'></script>
    <script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/grid-0.4.3.js" type="text/javascript"></script>
    <script type="text/javascript">

        var suggestionLink = "@Url.Action("Suggest")";

        function Add() {
            $("#spanContactHeading").html("Create Contact");
            $("#btnSendStories").prop("disabled", true);
            $("#Type").val("add");
            $("#Id").val("");
            $("#Id").removeAttr("readOnly");
            $("#firstName").val("");
            $("#lastName").val("");
            $("#email").val("");
            $("#cellPhone").val("");
            $("#officePhone").val("");
            $("#Notes").val("");
            $("#contactModal").modal("show");
        }

        function CreateAlert() {

        }

        function IsStorySelected(e) {
            var selectedStories = document.getElementsByName('chkId');
            var checked;
            for (var i = 0; i < selectedStories.length; i++)
            {
                if (selectedStories[i].checked)
                    checked = true;
            }
            if (checked)
                $("#btnSendStories").prop("disabled", false);
            else
                $("#btnSendStories").prop("disabled", true);
        }



        function EditAlert(e) {

            var id = 0;
            if (e != null | e != undefined) {
                var searchId = $(e).parents('tr')[0].cells[0].innerHTML;
                  id = searchId;
            }

            $.ajax({
                type: "GET",
                url: '/Alert/GetAlertDetails/',
                contentType: "application/json; charset=utf-8",
                data: { "searchId": id },
                datatype: "json",
                success: function (data) {

                    $('#alertModalForm').html(data);
                    $('#alertModal').modal('show');
                    $('#contactModal').modal('hide');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }


        function DeleteAlert(e) {
            var alertId = $(e).parents('tr')[0].cells[0].innerHTML;
            $('#alertDeleteModal').data('id', alertId).modal('show');
        }

        function DeleteSelectedAlert() {
            var alertId = $('#alertDeleteModal').data('id');
            $.post('@Url.Action("DeleteAlert", "Alert")', { 'searchId': alertId },
                function() {
                    $('#alertDeleteModal').modal('hide');
                });
            var contactId=$("#Id").val();
            LoadAlerts(contactId);
            LoadStories(contactId);
            $('#alertMessages').text('Alert has been Deleted.');
        };

        function LoadAlerts(id)
        {

            var Contact =
                {
                    "id":  id,
                    "type": 'Contact'
                };
            $.ajax({
                url: '/Contact/GetAlertsById/',
                data: JSON.stringify(Contact),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    isSuccess = result;
                    var trf = $("#alertsGrid tbody:first tr:first")[0];
                    $("#alertsGrid tbody:first").remove();
                    if (result.records != null && result.records != null) {
                        for (var i = 0; i < result.records.length; i++) {
                            var Id = result.records[i].SearchId;
                            $('#alertsGrid').append('<tr><td id="Id" hidden>' + result.records[i].SearchId + '</td><td><a href="javascript:EditAlert(Id)" style="color:black">' + result.records[i].SearchName + '</a></td>' +
                                "<td><span class='glyphicon glyphicon-edit' style='cursor: pointer;' onclick='CreateAlert(this)'></span></td><td><div data-role='display' title='Edit'><span class='glyphicon glyphicon-pencil' style='cursor: pointer;' onclick='EditAlert(this)'></span></div></td><td><span class='glyphicon glyphicon-remove' style='cursor: pointer;' onclick='DeleteAlert(this)'></span></td></tr >");
                        };
                    }
                },
                error: function (result) {
                    isSuccess = result;
                }
            }).done(function () {
            });

        }

        function LoadStories(id) {

            var Contact =
                {
                    "id":id,
                    "type": 'Contact'
                };
            $.ajax({
                url: '/Contact/GetStoriesById/',
                data: JSON.stringify(Contact),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    isSuccess = result;
                    var trf = $("#storiesGrid tbody:first tr:first")[0];
                    $("#storiesGrid tbody:first").remove();
                    if (result != null && result.records != null) {
                        for (var i = 0; i < result.records.length; i++) {
                            var Id = result.records[i].StoryId;
                            $('#storiesGrid').append('<tr><td id="Id" hidden>' + result.records[i].StoryId + '</td><td><input type="checkbox" name="chkId" onchange=IsStorySelected(this) value="' + result.records[i].StoryId + '"/><a href="#" style="color:black">' + result.records[i].Title + '</a></td></td ><td>' + result.records[i].Status +
                                "</td><td><span class='glyphicon glyphicon-edit' style='cursor: pointer;'></span></td><td><span class='glyphicon glyphicon-remove' style='cursor: pointer;'></span></td></tr >");
                        };
                    }
                },
                error: function (result) {
                    isSuccess = result;
                }
            }).done(function () {
            });

        }

        function Edit(e) {
            $("#spanContactHeading").html("Edit Contact");
            $("#Type").val("update");
            $("#Id").val(e.data.id);
            $("#btnCreateAlert").prop("disabled", false);
            $("#btnSendStories").prop("disabled", true);
            $("#Id").attr("readOnly","readOnly");
            $("#firstName").val(e.data.record.FirstName);
            $("#lastName").val(e.data.record.LastName);
            $("#email").val(e.data.record.Email);
            $("#cellPhone").val(e.data.record.CellPhone);
            $("#officePhone").val(e.data.record.OfficePhone);
            $("#Notes").val(e.data.record.Notes);
            var val = e.data.record.IsStarred == "y" ? true : false;
            $("#isStarred").prop("checked", val);
            $("#btnSave").prop("disabled", false);

            //Loading Alert grid
            LoadAlerts(e.data.id);

            //Loading Story grid
            LoadStories(e.data.id);

            $('#contactModal').modal({ backdrop: 'static', keyboard: false }, 'show');
            $("#CreationDate").val(e.data.record.CreationDate);
        }



        function Delete(e) {
            if (typeof (e) == "undefined")
                var contactId = $("#Id").val();
            else
                var contactId = e.data.id;
            $('#contactDeleteModal').data('id', contactId).modal('show');
        }

        function DeleteContact() {
            var contactId = $('#contactDeleteModal').data('id');
            $.post('@Url.Action("Remove", "Contact")', { 'id': contactId },
                function(data) {
                    $('#contactDeleteModal').modal('hide');
                });
            location.reload();
        };

        function ShowAlert() {
            EditAlert(null);
        };

        function StarAContact(e) {
            if (typeof (e) == "undefined")
                var contactId = $("#Id").val();
            else
                var contactId = e.data.id;
            $.post('@Url.Action("StarAContact")', { 'id': contactId },
                function(data) {
                });
        };

        function ImportContacts() {
            var filePath= "C:\\Users\\Lenovo\\Desktop\\TestDataContacts.xls";
            $.post('@Url.Action("ImportContacts")', { 'filePath': filePath },
                function (data) {
                    $('#ImportModal').modal('hide');
                    alert("Contacts Imported Successfully!");
                });

        };



         function ShowImportModal() {
            $('#ImportModal').modal('show');
        };




        $(document).ready(function () {

            $("#btnImportContact").on("click", ShowImportModal);
            $("#btnImport").on("click", ImportContacts);
            $("#btnCreateAlert").on("click", ShowAlert);
            $("#btnDelete").on("click", DeleteContact);
            $("#btnDeleteAlert").on("click", DeleteSelectedAlert);
            var contactGrid;
            var alertGrid;
            var storiesGrid;
            function Search() {
                contactGrid.reload({ searchString: $("#search").val(), starred: $("#selFilter").val() });
            };

            validate();
            $('#firstName, #lastName, #email,#cellPhone,#officePhone,#Notes').change(validate);




            contactGrid = $("#contactsGrid").grid({
                dataKey: "Id",
                uiLibrary: "bootstrap",
                columns: [
                    { text: '', datafield: 'Id', type: 'checkbox', width: 40, cssClass: 'chkContacts'},
                    { field: "Id", width: 100, sortable: false, hidden: true },
                    { field: "FirstName", sortable: true },
                    { field: "LastName", sortable: true },
                    { field: "Email",title: "Email", sortable: false, },
                    { field: "CellPhone", title: "Phone", sortable: false },
                    { field: "OfficePhone", title: "OfficePhone", sortable: false, hidden: true },
                    { field: "Notes", title: "Notes", sortable: false },
                    { title: "", field: "Edit", width: 34, type: "icon", icon: "glyphicon-star", tooltip: "Star", events: { "click": StarAContact } },
                    { title: "", field: "Edit", width: 34, type: "icon", icon: "glyphicon-pencil", tooltip: "Edit", events: { "click": Edit } },
                    { title: "", field: "Delete", width: 34, type: "icon", icon: "glyphicon-remove", tooltip: "Delete", events: { "click": Delete } }
                ],
                pager: { enable: true, limit: 10, sizes: [10,50, 100] }
            });

            alertGrid = $("#alertsGrid").grid({
                dataKey: "Id",
                uiLibrary: "bootstrap",
                columns: [
                    { field: "Id", title: "Id", width: 100, sortable: false, hidden: true },
                    { field: "Name", title: "Name", sortable: true },
                    { title: "", field: "Create", width: 34, type: "icon", icon: "glyphicon-edit", tooltip: "Create", events: { "click": CreateAlert } },
                    { title: "", field: "Edit", width: 34, type: "icon", icon: "glyphicon-pencil", tooltip: "Edit", events: { "click": EditAlert } },
                    { title: "", field: "Delete", width: 34, type: "icon", icon: "glyphicon-remove", tooltip: "Delete", events: { "click": DeleteAlert } }
                ],
                //pager: { enable: true, limit: 10, sizes: [10, 50, 100] }
            });

            storiesGrid = $("#storiesGrid").grid({
                dataKey: "Id",
                uiLibrary: "bootstrap",
                columns: [
                    { field: "Id", width: 100, sortable: false, hidden: true },
                    { field: "Story Title", sortable: true },
                    { field: "Status", sortable: false },
                    { title: "", field: "Create", width: 34, type: "icon", icon: "glyphicon-edit", tooltip: "Create", events: { "click": CreateAlert } },
                        { title: "", field: "Delete", width: 34, type: "icon", icon: "glyphicon-remove", tooltip: "Delete", events: { "click": Delete } }
                ],
                //pager: { enable: true, limit: 10, sizes: [10, 50, 100] }
            });

            $("#btnAddContact").on("click", Add);
            $("#btnSearch").on("click", Search);
        });

        function validate() {
            $('#firstName, #lastName, #email,#cellPhone,#officePhone,#Notes').change(validate);
            if ($('#firstName').val().length > 0 ||
                $('#lastName').val().length > 0 ||
                $('#email').val().length > 0 ||
                $('#cellPhone').val().length > 0 ||
                $('#officePhone').val().length > 0 ||
                $('#Notes').val().length >0) {
                $("#btnSave").prop("disabled", false);
            }
            else {
                $("#btnSave").prop("disabled", true);
            }
        }

        setTimeout(function () {
            $('#display-success').fadeOut().text('');
            $('#display-msg').fadeOut().text('');
            $('#display-error').fadeOut().text('');
            $('#display-delete').fadeOut().text('');
        }, 3000);


        function BulkActions(action)
        {

            var contactIdList = null;
            contactIdList = [];

            $('input:checkbox:checked').each(function () {

                if ($(this).parent().hasClass("chkContacts")) {

                    contactIdList.push($(this).attr('value'));
                }
            });



            $.ajax({
                type: "post",
                url: "/Contact/BulkActionOnContacts",
                data: { "action": action, "contactIdList": contactIdList },
                datatype: "json",
                success: function (data) {

                    if (data == "True") {
                        location.reload();
                        $(".chkContacts").prop("checked", false);


                    } else {
                             alert("Failed!");

                    }

                }
            });
        }




    </script>

</head>
@{ Html.EnableClientValidation(); }
<body>
    <div class="container fill">


        @if (!ViewData.ModelState.IsValid)
        {
            <div class="row">
                <div class="col-lg-pull-10">
                    <label class="label-danger" id="display-error">
                        @Html.ValidationMessage("Error")
                    </label>
                </div>
            </div>

        }
        else if (TempData["SuccessMessage"] != null)
        {
            <label class="label-success" id="display-success">@TempData["SuccessMessage"]</label>
        }
        @if (TempData["deleteMessage"] != null)
        {
            <div style="color:green" id="display-delete">@TempData["deleteMessage"]</div>
        }

        else if (TempData["message"] != null)
        {
            <div style="color:green" id="display-msg">@TempData["message"]</div>
        }

        @if (TempData["multipleAction"] != null)
        {
            <div style="color:green" id="display-delete">@TempData["multipleAction"]</div>
        }

        <h2>Contacts</h2>
        <div class="row">
            <div class="pull-right">
                <button type="button" id="btnStoryBank" class="btn btn-default pull-right" onclick="location.href='@Url.Action("Index","Story")'">Story Bank</button>
            </div>
            <div class="pull-right">
                <button type="button" id="btnCategories&Tags" class="btn btn-default pull-right" onclick="location.href='@Url.Action("Index","Categories")'">Categories & Tags</button>
            </div>
            <div class="btn-group pull-right" role="group">
                <button type="button" id="btnBulkActions" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Bulk Actions
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href='javascript:BulkActions("Delete")'>Delete</a></li>
                    <li><a href='javascript:BulkActions("Star")'>Star</a></li>
                </ul>
            </div>
            <div class="pull-right">
                <button type="button" id="btnImportContact" class="btn btn-default pull-right">Import Contacts</button>
            </div>
            <div class="pull-right">
                <button type="button" id="btnAddContact" class="btn btn-default pull-right">Add New Contact</button>
            </div>
            <div class="col-md-2" style="padding-right:0">
                <input type="text" id="search" class="form-control" placeholder="Search for Notes...">
            </div>

            <div class="col-md-1" style="padding-left:10px;">
                <label class="label-info1 label" style="color:#000; font-size:14px; position:relative; top:5px;">Is Starred</label>
            </div>
            <div class="col-md-2">
                <select id="selFilter" class="form-control"><option value="Select">Select<option value="Yes">Yes<option value="No">No</option></select>
            </div>

            <div class="">
                <button type="button" id="btnSearch" class="btn btn-default pull-right">Go!</button>
            </div>

        </div>
        <br />
        <table id="contactsGrid" data-source="@Url.Action("GetContacts")"></table>
    </div>
    @using (Html.BeginForm("Save", "Contact", FormMethod.Post))
    {
        @Html.ValidationSummary(true)
           <!-- Modal -->
        <div class="modal fade" id="contactModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="height: 150px">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="float:left">
                            <span style="float:left" id="spanContactHeading"></span>
                        </label><label style="float:right">
                            <button style='float:right' type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <span class='glyphicon glyphicon-remove' style='cursor: pointer;float:right' onclick='Delete()'></span>
                            <span class='glyphicon glyphicon-pencil' style='cursor: pointer;float:right' onclick='EditContactDetails()'></span>
                            <span id="StarSpan" class="glyphicon glyphicon-star" style="cursor: pointer;float:right" onclick="StarAContact()"></span>
                        </label>
                    </div>
                    <div class="modal-body">
                        <form>
                            @Html.HiddenFor(Model => Model.IsNew)
                            @Html.HiddenFor(Model => Model.CreatedOnDateTime)
                            <div hidden>
                                <label for="Id">Id</label>
                                @Html.TextBoxFor(Model => Model.Id, new { @class = "form-control", id = "Id" })
                                @Html.ValidationMessageFor(Model => Model.Id)
                            </div>
                            <div class="form-group">
                                <label for="FirstName">First Name</label>
                                @Html.TextBoxFor(Model => Model.FirstName, new { @class = "form-control", id = "firstName" })
                                @Html.ValidationMessageFor(Model => Model.FirstName)
                            </div>
                            <div class="form-group">
                                <label for="LastName">Last Name</label>
                                @Html.TextBoxFor(Model => Model.LastName, new { @class = "form-control", id = "lastName" })
                                @Html.ValidationMessageFor(Model => Model.LastName)
                            </div>
                            <div class="form-group">
                                <label for="Email">Email</label>
                                @Html.TextBoxFor(Model => Model.Email, new { @class = "form-control", id = "email" })
                                @Html.ValidationMessageFor(Model => Model.Email)
                            </div>
                            <div class="form-group">
                                <label for="CellPhone">Cell Phone</label>
                                @Html.TextBoxFor(Model => Model.CellPhone, new { @class = "form-control", id = "cellPhone" })
                                @Html.ValidationMessageFor(Model => Model.CellPhone)
                            </div>
                            <div class="form-group">
                                <label for="OfficePhone">Office Phone</label>
                                @Html.TextBoxFor(Model => Model.OfficePhone, new { @class = "form-control", id = "officePhone" })
                                @Html.ValidationMessageFor(Model => Model.OfficePhone)
                            </div>
                            <div class="form-group">
                                <label for="Notes">Notes</label>
                                @Html.TextBoxFor(Model => Model.Notes, new { @class = "form-control", id = "Notes" })
                                @Html.ValidationMessageFor(Model => Model.Notes)
                            </div>
                            <h4 class="modal-title" id="myModalLabel2">Alerts</h4><button type="button" id="btnCreateAlert" onclick="CreateAlert()" style="float:right" disabled class="btn btn-default">Create Alert</button>
                            <label id="alertMessages"></label>
                            <table id="alertsGrid"></table>
                            <h4 class="modal-title" id="myModalLabel3">Story List</h4>
                            <button type="button" id="btnSendStories" class="btn btn-default" style="float:right" disabled>Send Stories</button>
                            <table id="storiesGrid"></table>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnCancel" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" id="btnSave" class="btn btn-default" disabled>Save</button>
                    </div>
                </div>
            </div>
        </div>


        @*Delete Contact popup*@
        <div class="modal fade" id="contactDeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document" style="height: 150px;width:380px">
                <div class="modal-content">
                    <div class="modal-header jumbotron">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel4" style='font-weight: bold;'>Delete Contact</h4>
                    </div>
                    <div class="modal-body">
                        <p class="success-message" style="color: gray;font-weight:bold;">Are you sure you want to delete this contact? </p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default" style="border: none;font-weight:bold;text-transform:uppercase;color:gray" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-default" style="border: none; font-weight:bold;text-transform:uppercase;color:skyblue" id="btnDelete">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        @*Delete alert popup*@
        <div class="modal fade" id="alertDeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document" style="height: 150px;width:380px">
                <div class="modal-content">
                    <div class="modal-header jumbotron">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel4" style='font-weight: bold;'>Delete Alert</h4>
                    </div>
                    <div class="modal-body">
                        <p class="success-message" style="color: gray;font-weight:bold;">Are you sure you want to delete this alert? </p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default" style="border: none;font-weight:bold;text-transform:uppercase;color:gray" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-default" style="border: none; font-weight:bold;text-transform:uppercase;color:skyblue" id="btnDeleteAlert">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        @*alert modal popup*@
        <div class="modal fade" id="alertModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document" style="height: 150px;width:780px">
                <div class="modal-content">

                    <div class="modal-body">

                        <div id="alertModalForm">
                        </div>

                        <div class="modal-footer">
                            <button class="btn btn-default" style="border: none;font-weight:bold;text-transform:uppercase;color:gray" data-dismiss="modal">Cancel</button>
                            <button type="submit" disabled class="btn btn-default" style="border: none; font-weight:bold;text-transform:uppercase;color:skyblue" id="btnSaveAlert">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="ImportModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document" style="height: 150px;width:780px">
                <div class="modal-content">
                    <div class="modal-body">
                        <div>
                            <input type="file" id="file">
                            <input hidden="hidden" id="fileUrl">
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-default" style="border: none; font-weight:bold;text-transform:uppercase;color:skyblue" id="btnImport">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
</body>